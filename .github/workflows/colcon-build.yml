name: colcon build

on:
  push:
    branches: [ test ]
  pull_request:

jobs:
  build:
    name: Build (colcon)
    runs-on: ubuntu-22.04
    env:
      COLCON_DEFAULTS_FILE: ""
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup ROS 2
        uses: ros-tooling/setup-ros@v0.7
        with:
          required-ros-distributions: humble

      - name: Cache rosdep and pip
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/rosdep
            ~/.cache/pip
          key: ${{ runner.os }}-rosdep-pip-${{ hashFiles('**/deps.repos','**/package.xml') }}
          restore-keys: |
            ${{ runner.os }}-rosdep-pip-

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-vcstool python3-colcon-common-extensions python3-pip

      - name: Cache colcon build artifacts
        uses: actions/cache@v4
        with:
          path: |
            build
            install
            log
          key: ${{ runner.os }}-colcon-${{ hashFiles('**/deps.repos','**/package.xml') }}
          restore-keys: |
            ${{ runner.os }}-colcon-

      - name: Import vcs dependencies (if deps.repos present)
        run: |
          # support deps.repos at repo root or under src/
          if [ -f deps.repos ]; then
            vcs import src < deps.repos
          elif [ -f src/deps.repos ]; then
            vcs import src < src/deps.repos
          else
            echo "no deps.repos found"
          fi

      - name: Ensure TracIK (optional)
        run: |
          # Some users keep TracIK in a separate workspace; if not present, clone a known TracIK repo so builds that need it succeed.
          if [ ! -d src/trac_ik ] && [ ! -d trac_ik_ws/src/trac_ik ]; then
            echo "TracIK not found in workspace, cloning aprotyas/trac_ik into src/trac_ik"
            git clone https://github.com/aprotyas/trac_ik.git src/trac_ik || true
          else
            echo "TracIK already present or will be provided by deps.repos"
          fi

      - name: Install ROS dependencies
        run: |
          source /opt/ros/humble/setup.bash
          sudo apt-get update
          python3 -m pip install -U rosdep
          sudo rosdep init || true
          rosdep update
          # Install dependencies from all packages in src (including those from deps.repos)
          rosdep install --from-paths src --ignore-src -r -y



      - name: Build
        run: |
          # Source ROS 2 setup before building
          source /opt/ros/humble/setup.bash
          # Use merge-install for simpler runtime sourcing
          colcon build --merge-install --cmake-args -DCMAKE_BUILD_TYPE=Release

      - name: Upload build cache
        if: always()
        uses: actions/cache@v4
        with:
          path: |
            build
            install
            log
          key: ${{ runner.os }}-colcon-${{ hashFiles('**/deps.repos','**/package.xml') }}
          restore-keys: |
            ${{ runner.os }}-colcon-

      - name: Run tests
        if: always()
        run: |
          source /opt/ros/humble/setup.bash
          source install/setup.bash
          colcon test --event-handlers console_direct+
          colcon test-result --verbose
